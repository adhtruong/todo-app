{"version":3,"sources":["useTodoStore.tsx","AddTodo.tsx","TodoList.tsx","App.tsx","index.tsx"],"names":["newTodo","title","id","uuidv4","isCompleted","useTodoStore","create","set","todos","addTodo","state","removeTodo","todoId","filter","todo","toggleCompletedState","map","useStyles","makeStyles","theme","inputBaseStyles","margin","spacing","flex","paperStyles","padding","display","alignItem","iconButtonStyles","dividerIconStyles","height","AddTodoForm","useState","todoText","setTodoText","Paper","component","className","onSubmit","e","preventDefault","length","InputBase","onChange","target","value","placeholder","Divider","orientation","IconButton","type","AddCircleRounded","marginAutoItem","textAlign","completedTodoStyles","textDecoration","TodoList","List","Typography","ListItem","ListItemIcon","Checkbox","edge","checked","ListItemText","ListItemSecondaryAction","onClick","headerTextStyles","marginBottom","App","Container","maxWidth","variant","AddTodo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c50c7ab.chunk.js","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\r\nimport create from \"zustand\";\r\n\r\nimport { Todo } from \"./types\";\r\n\r\ninterface TodoState {\r\n  todos: Todo[];\r\n  addTodo: (title: string) => void;\r\n  removeTodo: (id: string) => void;\r\n  toggleCompletedState: (id: string) => void;\r\n}\r\n\r\nconst newTodo = (title: string): Todo => ({\r\n  title,\r\n  id: uuidv4(),\r\n  isCompleted: false,\r\n});\r\n\r\nexport const useTodoStore = create<TodoState>((set) => ({\r\n  todos: [],\r\n  addTodo: (title: string) =>\r\n    set((state) => ({\r\n      todos: [...state.todos, newTodo(title)],\r\n    })),\r\n  removeTodo: (todoId) =>\r\n    set((state) => ({\r\n      todos: state.todos.filter((todo) => todo.id !== todoId),\r\n    })),\r\n  toggleCompletedState: (todoId) =>\r\n    set((state) => ({\r\n      todos: state.todos.map((todo) => {\r\n        if (todo.id !== todoId) {\r\n          return todo;\r\n        }\r\n\r\n        return {\r\n          ...todo,\r\n          isCompleted: !todo.isCompleted,\r\n        };\r\n      }),\r\n    })),\r\n}));\r\n","import { useState } from \"react\";\r\n\r\nimport {\r\n  Divider,\r\n  IconButton,\r\n  InputBase,\r\n  makeStyles,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport { AddCircleRounded } from \"@material-ui/icons\";\r\n\r\nimport { useTodoStore } from \"./useTodoStore\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  inputBaseStyles: {\r\n    margin: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  paperStyles: {\r\n    padding: \"1px 2px\",\r\n    display: \"flex\",\r\n    alignItem: \"center\",\r\n  },\r\n  iconButtonStyles: {},\r\n  dividerIconStyles: {\r\n    height: 28,\r\n    margin: 0.5,\r\n  },\r\n}));\r\n\r\nconst AddTodoForm = (): JSX.Element => {\r\n  const { inputBaseStyles, paperStyles, iconButtonStyles, dividerIconStyles } =\r\n    useStyles();\r\n\r\n  const [todoText, setTodoText] = useState(\"\");\r\n  const { addTodo } = useTodoStore();\r\n\r\n  const handleSubmit = () => {\r\n    if (!todoText.length) {\r\n      return;\r\n    }\r\n\r\n    addTodo(todoText);\r\n    setTodoText(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper\r\n        component=\"form\"\r\n        className={paperStyles}\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          handleSubmit();\r\n        }}\r\n      >\r\n        <InputBase\r\n          className={inputBaseStyles}\r\n          onChange={(e) => setTodoText(e.target.value)}\r\n          value={todoText}\r\n          placeholder=\"New todo\"\r\n        />\r\n        <Divider className={dividerIconStyles} orientation=\"vertical\" />\r\n        <IconButton\r\n          type=\"submit\"\r\n          className={iconButtonStyles}\r\n          aria-label=\"search\"\r\n        >\r\n          <AddCircleRounded />\r\n        </IconButton>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTodoForm;\r\n","import {\r\n  Checkbox,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport { useTodoStore } from \"./useTodoStore\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  marginAutoItem: {\r\n    margin: \"auto\",\r\n    textAlign: \"center\",\r\n    padding: theme.spacing(2),\r\n  },\r\n  completedTodoStyles: {\r\n    textDecoration: \"line-through\",\r\n  },\r\n}));\r\n\r\nexport const TodoList = (): JSX.Element => {\r\n  const { completedTodoStyles, marginAutoItem } = useStyles();\r\n  const { removeTodo, toggleCompletedState, todos } = useTodoStore();\r\n\r\n  return (\r\n    <List>\r\n      {todos.length === 0 && (\r\n        <Typography className={marginAutoItem}>\r\n          No to-dos to display!\r\n        </Typography>\r\n      )}\r\n      {todos.map((todo) => (\r\n        <ListItem key={todo.id}>\r\n          <ListItemIcon>\r\n            <Checkbox\r\n              edge=\"start\"\r\n              checked={todo.isCompleted}\r\n              onChange={() => toggleCompletedState(todo.id)}\r\n            />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            className={todo.isCompleted ? completedTodoStyles : \"\"}\r\n            key={todo.id}\r\n          >\r\n            {todo.title}\r\n          </ListItemText>\r\n          <ListItemSecondaryAction>\r\n            <IconButton\r\n              onClick={() => {\r\n                removeTodo(todo.id);\r\n              }}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n","import { Container, makeStyles, Typography } from \"@material-ui/core\";\n\nimport AddTodoForm from \"./AddTodo\";\nimport { TodoList } from \"./TodoList\";\n\nconst useStyles = makeStyles((theme) => ({\n  headerTextStyles: {\n    textAlign: \"center\",\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(1),\n  },\n}));\n\nfunction App(): JSX.Element {\n  const { headerTextStyles } = useStyles();\n\n  return (\n    <Container maxWidth=\"xs\">\n      <Typography variant=\"h3\" className={headerTextStyles}>\n        To-do List\n      </Typography>\n      <AddTodoForm />\n      <TodoList />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\n\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}